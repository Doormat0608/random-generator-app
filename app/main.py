import streamlit as st
from generator import generate_mixed_distribution
from visualizer import plot_histogram, plot_sorted
from utils import load_config, save_config_json

import pandas as pd
import json

st.set_page_config(page_title='–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —á–∏—Å–µ–ª –∏ –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö', page_icon='üëã', layout='wide')

page = st.sidebar.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É", ["–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —á–∏—Å–µ–ª", "–û —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µ"])

if page == "–û —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µ":
    st.markdown("# –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —á–∏—Å–µ–ª —Å –∫–æ–º–ø–æ–∑–∏—Ü–∏–µ–π –¥–≤—É—Ö –ª–∏–Ω–µ–π–Ω—ã—Ö —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π\n\n## –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µ")
    col1, col2 = st.columns(2)
    with col1:
        st.markdown("**–§–ò–û:** –ú–∏–Ω–≥–∞–∑–æ–≤ –¢–∏–º—É—Ä –†–∞—Ñ–∞—ç–ª–µ–≤–∏—á  \n**–ù–æ–º–µ—Ä —É—á–µ–±–Ω–æ–π –≥—Ä—É–ø–ø—ã:** –ò–í–¢-222")
    with col2:
        st.markdown(
            "**–û –Ω–∞–±–æ—Ä–µ –¥–∞–Ω–Ω—ã—Ö:**  \n"
            "–î–∞–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç —Ä–µ–∞–ª–∏–∑—É–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —á–∏—Å–µ–ª —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ –¥–≤—É—Ö –ª–∏–Ω–µ–π–Ω—ã—Ö —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π.  \n"
            "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–¥–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –≤–∏–∑—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç.  \n"
            "–¢–∞–∫–∂–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è —Ä–∞–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏."
        )

elif page == "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —á–∏—Å–µ–ª":
    st.title("–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª")

    st.subheader("–ò–º–ø–æ—Ä—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–∑ JSON")
    config_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ JSON —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏", type=['json'])
    config_data = load_config(config_file)

    st.subheader("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏")

    col1, col2, col3 = st.columns(3)

    with col1:
        st.markdown("**–ü–µ—Ä–≤–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ**")
        a1 = st.number_input("a1", value=config_data.get('a1', 1.0))
        b1 = st.number_input("b1", value=config_data.get('b1', 0.0))

    with col2:
        st.markdown("**–í—Ç–æ—Ä–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ**")
        a2 = st.number_input("a2", value=config_data.get('a2', -1.0))
        b2 = st.number_input("b2", value=config_data.get('b2', 1.0))

    with col3:
        st.markdown("**–û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏**")
        xmin = st.number_input("xmin", value=config_data.get('xmin', 0.0))
        xmax = st.number_input("xmax", value=config_data.get('xmax', 1.0))
        w = st.slider("–í–µ—Å –ø–µ—Ä–≤–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è (w)", 0.0, 1.0, config_data.get('w', 0.5))
        N = st.number_input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∏—Å–µ–ª (N)", min_value=1, max_value=1000000, value=int(config_data.get('N', 1000)), step=1)

    if xmin >= xmax:
        st.error("–û—à–∏–±–∫–∞: xmin –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å < xmax")
    else:
        samples = generate_mixed_distribution(a1, b1, a2, b2, xmin, xmax, w, N)
        df = pd.DataFrame(samples, columns=['value'])

        st.subheader("–ü–µ—Ä–≤—ã–µ 20 –∑–Ω–∞—á–µ–Ω–∏–π")
        st.write(df.head(20))

        st.subheader("–ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞")
        st.pyplot(plot_histogram(df), use_container_width=True)

        st.subheader("–£–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è")
        st.pyplot(plot_sorted(df), use_container_width=True)

        st.markdown("---")

        csv = df.to_csv(index=False).encode('utf-8')
        st.download_button("–°–∫–∞—á–∞—Ç—å CSV", data=csv, file_name='samples.csv', mime='text/csv')

        json_data = save_config_json(a1, b1, a2, b2, xmin, xmax, w, N)
        st.download_button("–°–∫–∞—á–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (JSON)", data=json_data, file_name='settings.json', mime='application/json')

        st.info("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ —ç–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω—ã.")
